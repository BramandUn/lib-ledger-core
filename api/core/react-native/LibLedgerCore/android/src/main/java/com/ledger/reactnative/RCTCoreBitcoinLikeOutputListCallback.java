// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from callback.djinni

package com.ledger.reactnative;

import BitcoinLikeOutputListCallbackImpl;
import RCTCoreBitcoinLikeOutput;
import RCTCoreError;
import co.ledger.core.BitcoinLikeOutput;
import co.ledger.core.Error;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import java.util.ArrayList;
import java.util.UUID;;

/**
 *Callback triggered by main completed task,
 *returns optional result as list of template type T
 */
public class RCTCoreBitcoinLikeOutputListCallback extends BitcoinLikeOutputListCallback {
    public Promise promise;
    public Bridge bridge;
    public static RCTCoreBitcoinLikeOutputListCallback initWithPromise(Promise promise, (RCTBridge *) bridge)
    {
        RCTCoreBitcoinLikeOutputListCallback callback = new RCTCoreBitcoinLikeOutputListCallback();
        if(callback)
        {
            callback.promise = promise;
            callback.bridge = bridge;
        }
        return callback;
    }
    /**
     * Method triggered when main task complete
     * @params result optional of type list<T>, non null if main task failed
     * @params error optional of type Error, non null if main task succeeded
     */
    public void onCallback(ArrayList<BitcoinLikeOutput> result, Error error, ) {
        try
        {
            if (error)
            {
                self.promise.reject(ERROR, error.message);
            }
            ArrayList<HashMap <String, String>> converted_result = new ArrayList<HashMap <String, String>>();
            for (HashMap <String, String> result_elem : result)
            {
                String uuid = UUID.randomUUID().toString();
                RCTCoreBitcoinLikeOutput rctImpl_result_elem = (RCTCoreBitcoinLikeOutput)self.bridge moduleForName("RCTCoreBitcoinLikeOutput");
                rctImpl_result_elem.javaObjects.put(uuid, result_elem);
                Map<String, String> converted_result_elem = new HashMap<String, String>();
                converted_result_elem.put("type","RCTCoreBitcoinLikeOutput");
                converted_result_elem.put("uid",uuid);
                converted_result.add(converted_result_elem);
            }

            self.promise.resolve(converted_result);
        }
        catch(Exception e)
        {
            self.promise.reject(ERROR, e);
        }
    }
}
