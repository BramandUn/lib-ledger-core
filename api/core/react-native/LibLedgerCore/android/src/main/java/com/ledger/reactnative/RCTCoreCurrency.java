// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from currency.djinni

package com.ledger.reactnative;

import co.ledger.core.BitcoinLikeNetworkParameters;
import co.ledger.core.Currency;
import co.ledger.core.CurrencyUnit;
import co.ledger.core.WalletType;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Optional;
import java.util.UUID;

/**Structure of cryptocurrency */
public class RCTCoreCurrency extends ReactContextBaseJavaModule {
    private final ReactApplicationContext reactContext;
    private Map<String, Currency> javaObjects;
    public Map<String, Currency> getJavaObjects()
    {
        return javaObjects;
    }

    public RCTCoreCurrency(ReactApplicationContext reactContext)
    {
        super(reactContext);
        this.reactContext = reactContext;
        this.javaObjects = new HashMap<String, Currency>();
    }

    @Override
    public String getName()
    {
        return "RCTCoreCurrency";
    }
    public void init(WalletType walletType, String name, int bip44CoinType, String paymentUriScheme, ArrayList <HashMap <String, String>> units, Optional<HashMap <String, String>> bitcoinLikeNetworkParameters, Promise promise) {
        ArrayList<CurrencyUnit> javaParam_4 = new ArrayList<CurrencyUnit>();
        for (HashMap <String, String> units_elem : units)
        {
            RCTCoreCurrencyUnit rctParam_units_elem = this.reactContext.getNativeModule(RCTCoreCurrencyUnit.class);
            CurrencyUnit javaParam_4_elem = rctParam_units_elem.getJavaObjects().get(units_elem.get("uid"));
            javaParam_4.add(javaParam_4_elem);
        }
        RCTCoreBitcoinLikeNetworkParameters rctParam_bitcoinLikeNetworkParameters = this.reactContext.getNativeModule(RCTCoreBitcoinLikeNetworkParameters.class);
        BitcoinLikeNetworkParameters javaParam_5 = rctParam_bitcoinLikeNetworkParameters.getJavaObjects().get(bitcoinLikeNetworkParameters.get().get("uid"));
        Currency javaResult = new Currency(walletType, name, bip44CoinType, paymentUriScheme, javaParam_4, javaParam_5);

        String uuid = UUID.randomUUID().toString();
        this.javaObjects.put(uuid, javaResult);
        Map<String, String> finalResult = new HashMap<String, String>();
        finalResult.put("type","RCTCoreCurrency");
        finalResult.put("uid",uuid);
        promise.resolve(finalResult);
    }
}
