// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from ethereum_like_wallet.djinni

package com.ledger.reactnative;

import GetEthreumLikeWalletCallbackImpl;
import RCTCoreError;
import RCTCoreEthereumLikeWallet;
import co.ledger.core.Error;
import co.ledger.core.EthereumLikeWallet;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import java.util.UUID;;

public class RCTCoreGetEthreumLikeWalletCallback extends ReactContextBaseJavaModule {

    private final ReactApplicationContext reactContext;
    private Map<String, GetEthreumLikeWalletCallbackImpl> javaObjects;

    public RCTCoreGetEthreumLikeWalletCallback(ReactApplicationContext reactContext)
    {
        super(reactContext);
        this.reactContext = reactContext;
        this.javaObjects = new HashMap<String, GetEthreumLikeWalletCallbackImpl>();
    }

    @Override
    public String getName()
    {
        return "RCTCoreGetEthreumLikeWalletCallback";
    }

    @ReactMethod
    public void onSuccess(Map<String, String> currentInstance, HashMap <String, String> wallet, boolean isCreated, Promise promise) {
        try
        {
            String sUid = currentInstance.get("uid");
            String sType = currentInstance.get("type");

            GetEthreumLikeWalletCallbackImpl currentInstanceObj = self.javaObjects.get("uid");
            if (!javaObj)
            {
                throw new Exception("Wrong RCTCoreGetEthreumLikeWalletCallback instance passed to onSuccess method");
            }

            RCTCoreEthereumLikeWallet rctParam_wallet = (RCTCoreEthereumLikeWallet)self.bridge.moduleForName("RCTCoreEthereumLikeWallet");
            EthereumLikeWallet javaParam_0 = (EthereumLikeWallet)rctParam_wallet.javaObjects.get(wallet.get("uid"));
            currentInstanceObj.onSuccess(javaParam_0, isCreated);
        }
        catch(Exception e)
        {
            promise.reject(ERROR, e);
        }
    }
    @ReactMethod
    public void onError(Map<String, String> currentInstance, HashMap <String, String> error, Promise promise) {
        try
        {
            String sUid = currentInstance.get("uid");
            String sType = currentInstance.get("type");

            GetEthreumLikeWalletCallbackImpl currentInstanceObj = self.javaObjects.get("uid");
            if (!javaObj)
            {
                throw new Exception("Wrong RCTCoreGetEthreumLikeWalletCallback instance passed to onError method");
            }

            RCTCoreError rctParam_error = (RCTCoreError)self.bridge.moduleForName("RCTCoreError");
            Error javaParam_0 = (Error)rctParam_error.javaObjects.get(error.get("uid"));
            currentInstanceObj.onError(javaParam_0);
        }
        catch(Exception e)
        {
            promise.reject(ERROR, e);
        }
    }
}
