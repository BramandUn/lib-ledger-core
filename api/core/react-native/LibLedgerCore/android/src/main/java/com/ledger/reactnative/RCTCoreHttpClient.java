// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from http_client.djinni

package com.ledger.reactnative;

import co.ledger.core.HttpClientImpl;
import co.ledger.core.HttpRequest;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Optional;
import java.util.UUID;

/**Class representing the http client performing the http requests */
public class RCTCoreHttpClient extends ReactContextBaseJavaModule {

    private final ReactApplicationContext reactContext;
    private Map<String, HttpClientImpl> javaObjects;
    public Map<String, HttpClientImpl> getJavaObjects()
    {
        return javaObjects;
    }

    public RCTCoreHttpClient(ReactApplicationContext reactContext)
    {
        super(reactContext);
        this.reactContext = reactContext;
        this.javaObjects = new HashMap<String, HttpClientImpl>();
    }

    @Override
    public String getName()
    {
        return "RCTCoreHttpClient";
    }

    /**
     *Execute a giver Http request\
     *@param request, HttpRequest object, requestr to execute
     */
    @ReactMethod
    public void execute(Map<String, String> currentInstance, HashMap <String, String> request, Promise promise) {
        try
        {
            String sUid = currentInstance.get("uid");
            String sType = currentInstance.get("type");

            HttpClientImpl currentInstanceObj = this.javaObjects.get("uid");
            if (!currentInstanceObj)
            {
                throw new Exception("Wrong RCTCoreHttpClient instance passed to execute method");
            }

            RCTCoreHttpRequest rctParam_request = this.reactContext.getNativeModule(RCTCoreHttpRequest.class);
            HttpRequest javaParam_0 = (HttpRequest)rctParam_request.getJavaObjects.get(request.get("uid"));
            currentInstanceObj.execute(javaParam_0);
        }
        catch(Exception e)
        {
            promise.reject(ERROR, e);
        }
    }
}
