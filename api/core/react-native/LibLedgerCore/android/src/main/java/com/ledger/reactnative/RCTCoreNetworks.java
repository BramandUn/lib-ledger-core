// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from networks.djinni

package com.ledger.reactnative;

import Networks;
import RCTCoreBitcoinLikeNetworkParameters;
import co.ledger.core.BitcoinLikeNetworkParameters;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import java.util.UUID;;

public class RCTCoreNetworks extends ReactContextBaseJavaModule {

    private final ReactApplicationContext reactContext;
    private Map<String, Networks> javaObjects;

    public RNLedgerCoreModule(ReactApplicationContext reactContext)
    {
        super(reactContext);
        this.reactContext = reactContext;
        this.javaObjects = new HashMap<String, Networks>();
    }

    @Override
    public String getName()
    {
        return "RCTCoreNetworks";
    }

    @ReactMethod
    public void bitcoin(Map<String, String> currentInstance, Promise promise) {
        try
        {
            BitcoinLikeNetworkParameters javaResult = Networks.bitcoin();

            String uuid = UUID.randomUUID().toString();
            RCTCoreBitcoinLikeNetworkParameters rctImpl_objcResult = (RCTCoreBitcoinLikeNetworkParameters)self.bridge moduleForName("RCTCoreBitcoinLikeNetworkParameters");
            rctImpl_objcResult.javaObjects.put(uuid, objcResult);
            Map<String, String> result = new HashMap<String, String>();
            result.put("type","RCTCoreBitcoinLikeNetworkParameters");
            result.put("uid",uuid);

            if(result)
            {
                promise.resolve(result);
            }
            else
            {
                throw new Exception("RCTCoreNetworks::bitcoin : Failed to return BitcoinLikeNetworkParameters from bitcoin method");
            }
        }
        catch(Exception e)
        {
            promise.reject(ERROR, e);
        }
    }
}
